version: '3'

services:
  backend:
    build: ./backend
    container_name: django_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=bd
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=12345678
      - DATABASE_URL=postgres://admin:12345678@postgres:5432/db
    networks:
      - my_network
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "GamaBackend.wsgi:application"]  # Reemplaza 'your_project_name' por el nombre de tu proyecto Django

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=12345678
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  nginx:
    image: nginx:alpine
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - my_network

  gama:
    image: gamaplatform/gama:1.9.3
    container_name: gama_headless
    restart: unless-stopped
    volumes:
      - ./gama:/working_dir
    ports:
      - "6868:6868"
    command: ["-socket", "6868"]
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
